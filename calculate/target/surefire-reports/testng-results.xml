<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="7" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-19T20:52:55 WIB" name="Surefire suite" finished-at="2024-05-19T20:52:55 WIB" duration-ms="15">
    <groups>
    </groups>
    <test started-at="2024-05-19T20:52:55 WIB" name="Surefire test" finished-at="2024-05-19T20:52:55 WIB" duration-ms="15">
      <class name="com.openway.submission.AppTest">
        <test-method signature="testLargeNumbers()[pri:0, instance:com.openway.submission.AppTest@52525845]" started-at="2024-05-19T20:52:55 WIB" name="testLargeNumbers" finished-at="2024-05-19T20:52:55 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLargeNumbers -->
        <test-method signature="testNegativeNumbers()[pri:0, instance:com.openway.submission.AppTest@52525845]" started-at="2024-05-19T20:52:55 WIB" name="testNegativeNumbers" finished-at="2024-05-19T20:52:55 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeNumbers -->
        <test-method signature="testMixedSigns()[pri:0, instance:com.openway.submission.AppTest@52525845]" started-at="2024-05-19T20:52:55 WIB" name="testMixedSigns" finished-at="2024-05-19T20:52:55 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedSigns -->
        <test-method signature="testPositiveNumbers()[pri:0, instance:com.openway.submission.AppTest@52525845]" started-at="2024-05-19T20:52:55 WIB" name="testPositiveNumbers" finished-at="2024-05-19T20:52:55 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveNumbers -->
        <test-method signature="testSmallNumbers()[pri:0, instance:com.openway.submission.AppTest@52525845]" started-at="2024-05-19T20:52:55 WIB" name="testSmallNumbers" finished-at="2024-05-19T20:52:55 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSmallNumbers -->
        <test-method signature="testZeroDenominator()[pri:0, instance:com.openway.submission.AppTest@52525845]" started-at="2024-05-19T20:52:55 WIB" name="testZeroDenominator" finished-at="2024-05-19T20:52:55 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testZeroDenominator -->
        <test-method signature="testZeroDivision()[pri:0, instance:com.openway.submission.AppTest@52525845]" started-at="2024-05-19T20:52:55 WIB" name="testZeroDivision" finished-at="2024-05-19T20:52:55 WIB" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Error! Undefined result]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Error! Undefined result
at com.openway.submission.App.calculate(App.java:14)
at com.openway.submission.AppTest.testZeroDivision(AppTest.java:34)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:112)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testZeroDivision -->
      </class> <!-- com.openway.submission.AppTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
